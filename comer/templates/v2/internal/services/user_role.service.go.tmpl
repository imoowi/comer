/*
generated by comer,https://github.com/imoowi/comer
Copyright Â© 2023 jun<simpleyuan@gmail.com>
*/
package services

import (
	"github.com/gin-gonic/gin"
	"{{.moduleName}}/internal/models"
	"{{.moduleName}}/internal/repos"
	"github.com/imoowi/comer/interfaces/impl"
)

var UserRole *UserRoleService

type UserRoleService struct {
	impl.Service[*models.UserRole]
}

func NewUserRoleService(r *repos.UserRoleRepo) *UserRoleService {
	return &UserRoleService{
		Service: *impl.NewService[*models.UserRole](r),
	}
}

func init() {
	RegisterServices(func() {
		UserRole = NewUserRoleService(repos.UserRole)
	})
}

func (s *UserRoleService) DeleteByUid(c *gin.Context, userId uint, admin *models.User) (deleted bool, err error) {
	deleted, err = repos.UserRole.DeleteByUid(c, userId)
	return
}

func (s *UserRoleService) AllByUserId(c *gin.Context, userId uint) (model []*models.UserRole, err error) {
	model, err = repos.UserRole.AllByUserId(c, userId)
	return
}

func (s *UserRoleService) AllIdsByUserId(c *gin.Context, userId uint) (ids []uint, err error) {
	model, err := repos.UserRole.AllByUserId(c, userId)
	if len(model) > 0 {
		for _, v := range model {
			ids = append(ids, v.ID)
		}

	}
	return
}
