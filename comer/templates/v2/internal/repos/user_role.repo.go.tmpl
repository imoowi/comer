/*
generated by comer,https://github.com/imoowi/comer
Copyright Â© 2023 jun<simpleyuan@gmail.com>
*/
package repos

import (
	"errors"

	"github.com/gin-gonic/gin"
	"{{.moduleName}}/internal/models"
 	"github.com/imoowi/comer/interfaces/impl"
	"{{.moduleName}}/internal/global"
)

var UserRole *UserRoleRepo

type UserRoleRepo struct {
	impl.Repo
}

func NewUserRoleRepo() {
	db:=global.MysqlDb
	UserRole = &UserRoleRepo{
		Repo: *impl.NewRepo(db),
	}
}

func init() {
	RegisterRepos(NewUserRoleRepo)
}

func (r *UserRoleRepo) DeleteByUid(c *gin.Context, uid uint) (deleted bool, err error) {
	if uid == 0 {
		deleted = false
		err = errors.New(`pls input user_id`)
		return
	}
	db := r.DB.Client
	err = db.Where(`user_id=?`, uid).Delete(&models.UserRole{}).Error
	if err == nil {
		deleted = true
	}
	return
}

func (r *UserRoleRepo) AllByUserId(c *gin.Context, userId uint) (userrole []*models.UserRole, err error) {
	db := r.DB.Client
	err = db.Where(`user_id=?`, userId).Find(&userrole).Error
	return
}
