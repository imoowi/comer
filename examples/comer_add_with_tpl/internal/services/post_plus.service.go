// generated by "comer add-with-tpl"
// Â© 2024 IMOOWI. All Rights Reserved.
//
//	@Author	yuanjun<imoowi@qq.com>
package services

import (
	"github.com/imoowi/examples/comer_add_with_tpl/internal/global"
	"github.com/imoowi/examples/comer_add_with_tpl/internal/models"
	"github.com/imoowi/examples/comer_add_with_tpl/internal/util/response"
	"github.com/imoowi/examples/comer_add_with_tpl/pkg/frame"
)

var PostPlus *PostPlusService

func RegisterPostPlusService(s *PostPlusService) {
	PostPlus = s
}

type PostPlusService struct {
	PostPlusRepo *models.PostPlusRepo
}

func newPostPlusService(r *models.PostPlusRepo) *PostPlusService {
	return &PostPlusService{
		PostPlusRepo: r,
	}
}

func init() {
	global.Container.Provide(newPostPlusService)
	global.RegisterContainerProviders(RegisterPostPlusService)
}

func (s *PostPlusService) All(c *frame.Context, query *models.PostPlusQuery) (res []*models.PostPlus, err error) {
	res, err = s.PostPlusRepo.All(c, query)
	return
}
func (s *PostPlusService) PageList(c *frame.Context, req *models.PostPlusQuery) (res *response.PageList, err error) {
	res, err = s.PostPlusRepo.PageList(c, req)
	return
}

func (s *PostPlusService) One(c *frame.Context, id uint) (model *models.PostPlus, err error) {
	model, err = s.PostPlusRepo.One(c, id)
	return
}

func (s *PostPlusService) OneByName(c *frame.Context, name string) (model *models.PostPlus, err error) {
	model, err = s.PostPlusRepo.OneByName(c, name)
	return
}

func (s *PostPlusService) Add(c *frame.Context, _model *models.PostPlus) (newId uint, err error) {
	// model, err := s.PostPlusRepo.OneByName(c, _model.Name)
	// if model != nil && model.ID > 0 {
	// 	newId = 0
	// 	err = errors.New(`name existed`)
	// 	return
	// }
	_model.ProjectId = c.GetUint(`project_id`)
	newId, err = s.PostPlusRepo.Add(c, _model)
	return
}

func (s *PostPlusService) Update(c *frame.Context, _model *models.PostPlus, id uint) (updated bool, err error) {
	_model.ProjectId = c.GetUint(`project_id`)
	updated, err = s.PostPlusRepo.Update(c, _model, id)
	return
}
func (s *PostPlusService) Delete(c *frame.Context, id uint) (deleted bool, err error) {
	deleted, err = s.PostPlusRepo.Delete(c, id)
	return
}
